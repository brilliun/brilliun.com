<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webgl on Brilliun&#39;s Blog</title>
    <link>https://brilliun.com/tags/webgl/</link>
    <description>Recent content in Webgl on Brilliun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Dec 2015 22:39:17 +0900</lastBuildDate>
    
	<atom:link href="https://brilliun.com/tags/webgl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WebGL Part4</title>
      <link>https://brilliun.com/2015/12/webgl-part4/</link>
      <pubDate>Sun, 06 Dec 2015 22:39:17 +0900</pubDate>
      
      <guid>https://brilliun.com/2015/12/webgl-part4/</guid>
      <description>作为这个系列的最后一篇，我想谈一下自己对于WebGL这项技术的本质的理解。
这里想要顺带提一下的是“Extensible Web”这个理念或者说运动。它的核心主要是下面两条准则：
 Web标准应该越来越多地将各种相关的底层功能对Javascript开放 现有的高层特性应该尽可能地转化为可以由Javascript访问或者说控制  读上去比较抽象，通俗一点的解释就是不要再把Javascript程序当作幼儿一般“照料”和“限制”，稍微“危险”一点的事情要么禁止要么由监护人（浏览器）代劳。Javascript以及由其驱动的Web应用正在茁壮成长，以往只赋予native app的那些权限和能力今后应该尽可能多地对Javascript开放。值得欣慰的是，近年来web技术已经在这方面取得了长足的发展，看看 What Web Can Do Today 就能发现大部分以往专属于native app的功能如今在web应用中也能实现了。</description>
    </item>
    
    <item>
      <title>WebGL Part3</title>
      <link>https://brilliun.com/2015/10/webgl-part3/</link>
      <pubDate>Mon, 05 Oct 2015 22:40:37 +0900</pubDate>
      
      <guid>https://brilliun.com/2015/10/webgl-part3/</guid>
      <description>&lt;p&gt;WebGL === 性能提升 ?&lt;/p&gt;

&lt;p&gt;提到WebGL大家最先想到的除了3D应用的渲染之外，另一个主要的共识就是使用WebGL会给图像性能带来颇大的提升，但是这个逻辑是怎么来的呢？而实际应用中是否真的只要切换成WebGL就能自然而然的立马得到想要的性能提升呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebGL Part2</title>
      <link>https://brilliun.com/2015/10/webgl-part2/</link>
      <pubDate>Sat, 03 Oct 2015 22:41:51 +0900</pubDate>
      
      <guid>https://brilliun.com/2015/10/webgl-part2/</guid>
      <description>&lt;p&gt;WebGL === 3D ?&lt;/p&gt;

&lt;p&gt;这是最常见的一个误解。MDN上的&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL&#34;&gt;WebGL入门教程&lt;/a&gt;开篇第一句话就是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WebGL enables web content to use an API based on OpenGL ES 2.0 to perform 3D rendering in an HTML canvas in browsers that support it without the use of plug-ins.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>WebGL Part1</title>
      <link>https://brilliun.com/2015/10/webgl-part1/</link>
      <pubDate>Fri, 02 Oct 2015 22:42:48 +0900</pubDate>
      
      <guid>https://brilliun.com/2015/10/webgl-part1/</guid>
      <description>&lt;p&gt;谈一谈WebGL这个看上去很时髦但始终没有进入主流应用的技术。&lt;/p&gt;

&lt;h3 id=&#34;为什么现在是时候考虑应用webgl了&#34;&gt;为什么现在是时候考虑应用WebGL了&lt;/h3&gt;

&lt;p&gt;在WebGL的普及上最大的一个问题是开发者对浏览器支持的担忧。需要特别说明的是如果仍然需要用户手动的从某个菜单中选择“启用WebGL”那就不能算真正的“支持”。毕竟没有人有信心多少用户会愿意做这个举动并且成功找到这个菜单而不是直接认为这个网页很可疑从而离脱。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>