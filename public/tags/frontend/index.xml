<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontend on Brilliun&#39;s Blog</title>
    <link>https://brilliun.com/tags/frontend/</link>
    <description>Recent content in Frontend on Brilliun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Jan 2017 22:36:48 +0900</lastBuildDate>
    
	<atom:link href="https://brilliun.com/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How Browsers Work</title>
      <link>https://brilliun.com/2017/01/how-browsers-work/</link>
      <pubDate>Sat, 14 Jan 2017 22:36:48 +0900</pubDate>
      
      <guid>https://brilliun.com/2017/01/how-browsers-work/</guid>
      <description>Prior Knowledge There are 3 main tasks for a browser to execute a web application:
 Fetching resources Page layout and rendering Javascript execution  Browsers And Browser Kernels Comparison of web browser engines
(WebKit)  Web layout engine: WebCore Javascript engine: JavascriptCore  Chrome  Web layout engine: Blink  Originally forked from WebCore, a component of WebKit  Javascript engine: V8  Safari  Web layout engine: WebCore Javascript engine: JavascriptCore  later evolved to Nitro, which compiles JavaScript into native machine code   Firefox  Web layout engine: Gecko Javascript engine: SpiderMonkey  Microsoft Edge  Web layout engine: EdgeHTML  forked from Trident, the engine of IE  Javascript engine: Chakra  Fetching Resources Prior Knowledge URL And URI Socket IP Protocol MAC Address Fetching from Cache Given the URL of a resource on the web, the browser starts by checking its local and application caches.</description>
    </item>
    
  </channel>
</rss>